stages:
  - Test

.matlab_defaults:
  image:
    name: registry.git-ce.rwth-aachen.de/cpm/coincar/software/graph_based_planning/matlab:test
    entrypoint: [""]

.matlab_with_test_summary:
  extends: .matlab_defaults
  variables:
    TEST_FOLDER:
      description: "Folder to execute all tests for."
  stage: Test
  script:
    - matlab -batch
       "openProject('graph_based_planning.prj');
        results = execute_tests($TEST_FOLDER, false);
        assertSuccess(results);"
  artifacts:
    when: always
    reports:
      junit: tests/coverage/junitReport.xml
  tags:
    - docker

.matlab_with_test_coverage:
  extends: .matlab_with_test_summary
  variables:
    TEST_FOLDER:
      description: "Folder to execute all unittests for."
    COVERAGE_FOLDER:
      description: "Folder to compute code coverage for."
  script:
    - matlab -batch
       "openProject('graph_based_planning.prj');
        [results, coverage] = execute_tests($TEST_FOLDER, true, $COVERAGE_FOLDER);
        fprintf('Code coverage %s%%\n', coverage);
        assertSuccess(results);"
  coverage: /Code coverage ([\.\d]*)%/
  artifacts:
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: tests/coverage/coverageReport.xml


Startup Unittest:
  extends: .matlab_defaults
  stage: Test
  script:
    - matlab -batch "mex -setup C; mex -setup C++; openProject('graph_based_planning.prj')"
  tags:
    - docker

Unittests:
  extends: .matlab_with_test_coverage
  parallel:
    matrix:
      - FOLDER: [helper, lanelets]
  variables:
    TEST_FOLDER: "'tests/unittests/$FOLDER'"
    COVERAGE_FOLDER: "'$FOLDER'"

Systemtests:
  extends: .matlab_with_test_coverage
  variables:
    TEST_FOLDER: "'tests/systemtests/systemtests.m'"
    COVERAGE_FOLDER: "{'commun', 'config', 'experiment', 'graph_and_tree', 'helper', 'hlc', 'lanelets', 'manual_control', 'mex', 'model', 'motion_primitive_automaton', 'scenarios', 'ui', 'visualization'}"
