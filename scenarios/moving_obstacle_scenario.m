function scenario = moving_obstacle_scenario()
    scenario = Scenario();
    scenario.trim_set = 3;
    veh = Vehicle();
    radius = 3;
    center_x = 2.25;
    center_y = 0;
    veh.x_start = -radius + center_x - 2;
    veh.y_start = 0 + center_y;
    veh.yaw_start = 0;
    veh.x_goal = radius + center_x + 100;
    veh.y_goal = 0 + center_y;
    veh.yaw_goal = 0;
    veh.trim_config = 1;
    veh.referenceTrajectory = [veh.x_start veh.y_start;veh.x_goal veh.y_goal];
    scenario.vehicles = veh;
    scenario.nVeh = 1;
    scenario.Hp = 5;
    scenario.Hu = scenario.Hp;
    
    scenario.model = BicycleModel(veh.Lf,veh.Lr);
    
    scenario.plot_limits = [-5,5;-2.5,2.5];
    
    recursive_feasibility = true;
    scenario.mpa = MotionPrimitiveAutomaton(...
        scenario.model...
        , scenario.trim_set...
        , scenario.offset...
        , scenario.dt...
        , scenario.nVeh...
        , scenario.Hp...
        , scenario.tick_per_step...
        , recursive_feasibility...
    );

    x1_obs = veh.x_start + 4;
    x2_obs = x1_obs + 1.5;
    
    y1_obs = 4;
    y2_obs = -4;
    
    dist_obs = 1.7;
    speed_obs = 0.75;
    
    dist_dt = speed_obs*scenario.dt; % distance traveled per timestep
    width_obs = 0.5;
    length_obs = 0.5;
    length_coll_area = 0.5+dist_dt;
    
    scenario.dynamic_obstacle_shape = [width_obs;length_obs];
    
    
    for j = 1:20
        for i = 1:80
            scenario.dynamic_obstacle_area{j,i} = transformedRectangle(...
                x1_obs ...
                ,center_y+y1_obs + i*dist_dt - j*dist_obs ...
                ,pi/2 ...
                ,length_coll_area ...
                ,width_obs ...
            );
            scenario.dynamic_obstacle_fullres{j,i} = [  ones(41,1)*x1_obs, ...
                                                        linspace(   center_y+y1_obs + i*dist_dt - j*dist_obs - dist_dt/2, ...
                                                                    center_y+y1_obs + (i+1)*dist_dt - j*dist_obs - dist_dt/2, 41)'];
                                                                
           scenario.dynamic_obstacle_area{j+20,i} = transformedRectangle(...
                x2_obs ...
                ,center_y+y2_obs - i*dist_dt + j*dist_obs ...
                ,pi/2 ...
                ,length_coll_area ...
                ,width_obs ...
            );
            scenario.dynamic_obstacle_fullres{j+20,i} = [  ones(41,1)*x2_obs, ...
                                                        linspace(   center_y+y2_obs - i*dist_dt + j*dist_obs + dist_dt/2, ...
                                                                    center_y+y2_obs - (i+1)*dist_dt + j*dist_obs + dist_dt/2, 41)'];
        end
    end
    
    scenario.name = sprintf('moving_obstacles_%i', 2);
end